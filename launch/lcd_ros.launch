<launch>
  <!-- Set 'dataset_name' to the name of the folder for params -->
  <arg name="dataset_name" default="EUROC"/>
  <!-- Set 'cache_time' to approximately the length of the rosbag dataset -->
  <arg name="cache_time" default="144.0"/>
  <!-- Set 'path_to_vocab' to the absolute path to vocabulary file (in VIO) -->
  <arg name="path_to_vocab"
       value="/home/marcus/catkin_ws/src/Kimera-VIO/vocabulary/ORBvoc.yml"/>

  <!-- Parmeter path arguments -->
  <arg name="params_folder" value="$(find kimera_lcd_ros)/param/$(arg dataset_name)"/>

  <!-- LCD parameter arguments -->
  <arg name="body_frame_id"   default="base_link"/>
  <arg name="world_frame_id"  default="world"/>
  <arg name="map_frame_id"    default="map"/>
  <arg name="log_output"      default="false" />
  <arg name="visualize"       default="false"/>
  <arg name="error_to_scale"  default="false"/>

  <!-- Topic arguments -->
  <arg name="gnd_truth_topic"       default="/vicon/firefly_sbx/firefly_sbx"/>
  <arg name="left_cam_topic"        default="cam0/image_raw"/>
  <arg name="right_cam_topic"       default="cam1/image_raw"/>
  <arg name="lcd_input_topic"       default="lcd_input"/>
  <arg name="closure_result_topic"  default="result"/>
  <arg name="closure_image_topic"   default="image"/>
  <arg name="error_topic"           default="error"/>
  <arg name="markers_topic"         default="marker_array"/>
  <arg name="poses_topic"           default="pose_array"/>

  <!-- If using sim time, must tell roscore -->
  <!-- <group if="$(arg use_sim_time)">
    <rosparam param="/use_sim_time">true</rosparam>
  </group> -->

	<!-- Launch main node  -->
	<node ns="lcd" name="kimera_lcd_ros_node" pkg="kimera_lcd_ros" type="kimera_lcd_ros_node"
        output="screen"
        args="
          --vocabulary_path=$(arg path_to_vocab)
          --lcd_params_path=$(arg params_folder)/LCDParameters.yaml
          --log_output=$(arg log_output)
          --logtostderr=1
          --colorlogtostderr=1
          --log_prefix=1">

    <rosparam command="load" file="$(arg params_folder)/calibration.yaml"/>

    <param name="base_link_frame_id"  value="$(arg body_frame_id)"/>
    <param name="world_frame_id"      value="$(arg world_frame_id)"/>
    <param name="map_frame_id"        value="$(arg map_frame_id)"/>

    <!-- Topic Remapping -->
    <remap from="lcd_input"  to="$(arg lcd_input_topic)"/>
    <remap from="result"     to="$(arg closure_result_topic)"/>
    <remap from="image"      to="$(arg closure_image_topic)"/>

    <!-- NOTE: Remap the Publisher Topics by changing args -->
  </node>

  <!-- Launch Visualization Nodes -->
  <group if="$(arg visualize)">
    <node ns="lcd" name="closure_visualizer_node" pkg="kimera_lcd_ros"
          type="closure_visualizer_node.py" output="screen">

      <param name="cache_time"      value="$(arg cache_time)"/>
      <param name="error_to_scale"  value="$(arg error_to_scale)"/>
      <param name="body_frame_id"   value="$(arg body_frame_id)"/>
      <param name="world_frame_id"  value="$(arg world_frame_id)"/>

      <!-- Topic Remapping -->
      <remap from="result"        to="$(arg closure_result_topic)"/>
      <remap from="error"         to="$(arg error_topic)"/>
      <remap from="marker_array"  to="$(arg markers_topic)"/>
      <remap from="pose_array"    to="$(arg poses_topic)"/>
    </node>
  </group>

  <!-- Launch ROS Data Provider -->
  <node ns="lcd" name="ros_lcd_data_provider_node" pkg="kimera_lcd_ros" type="ros_lcd_data_provider.py"
        output="screen">

    <rosparam command="load" file="$(arg params_folder)/calibration.yaml"/>    

    <remap from="lcd_input" to="$(arg lcd_input_topic)"/>
    <remap from="left_cam"  to="$(arg left_cam_topic)"/>
    <remap from="right_cam" to="$(arg right_cam_topic)"/>
  </node>

</launch>
